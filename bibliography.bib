% This file was created with JabRef 2.6.
% Encoding: UTF8

@CONFERENCE{Abraham2010,
  author = {Abraham, L. and Murphy, M.A. and Fenn, M. and Goasguen, S.},
  title = {{Self-provisioned hybrid clouds}},
  booktitle = {Proceeding of the 7th international conference on Autonomic computing},
  year = {2010},
  pages = {161--168},
  organization = {ACM},
  __markedentry = {[lance]},
  owner = {sebgoa},
  timestamp = {2010.11.10}
}

@CONFERENCE{Anderson2004,
  author = {Anderson, D.P.},
  title = {{BOINC: A system for public-resource computing and storage}},
  booktitle = {proceedings of the 5th IEEE/ACM International Workshop on Grid Computing},
  year = {2004},
  pages = {4--10},
  organization = {IEEE Computer Society},
  __markedentry = {[lance]},
  isbn = {0769522564},
  owner = {sebgoa},
  timestamp = {2010.10.31}
}

@ELECTRONIC{ejabberd-cluster,
  author = {badlop},
  month = {12},
  year = {2006},
  title = {Ejabberd},
  howpublished = {\\\url{http://www.ejabberd.im/features}},
  owner = {Lance},
  timestamp = {2009.08.29}
}

@INPROCEEDINGS{Barham2003,
  author = {Paul Barham and Boris Dragovic and Keir Fraser and Steven Hand and
	Tim Harris and Alex Ho and Rolf Neugebauer and Ian Pratt and Andrew
	Warfield},
  title = {Xen and the Art of Virtualization},
  booktitle = {Nineteenth ACM Symposium on Operating Systems Principles},
  year = {2003},
  __markedentry = {[lance]},
  abstract = {Numerous systems have been designed which use virtualization to subdivide
	the ample resources of a modern computer. Some require specialized
	hardware, or cannot support commodity operating systems. Some target
	100\% binary compatibility at the expense of performance. Others
	sacrifice security or functionality for speed. Few offer resource
	isolation or performance guarantees; most provide only best-effort
	provisioning, risking denial of service.This paper presents Xen,
	an x86 virtual machine monitor which allows multiple commodity operating
	systems to share conventional hardware in a safe and resource managed
	fashion, but without sacrificing either performance or functionality.
	This is achieved by providing an idealized virtual machine abstraction
	to which operating systems such as Linux, BSD and Windows XP, can
	be ported with minimal effort.Our design is targeted at hosting up
	to 100 virtual machine instances simultaneously on a modern server.
	The virtualization approach taken by Xen is extremely efficient:
	we allow operating systems such as Linux and Windows XP to be hosted
	simultaneously for a negligible performance overhead --- at most
	a few percent compared with the unvirtualized case. We considerably
	outperform competing commercial and freely available solutions in
	a range of microbenchmarks and system-wide tests.},
  file = {Barham2003.pdf:Barham2003.pdf:PDF},
  keywords = {Virtualization},
  owner = {mamurph},
  timestamp = {2009.02.23}
}

@ARTICLE{Beaumont2008,
  author = {Olivier Beaumont and Larry Carter and Jeanne Ferrante and Arnaud
	Legrand and Loris Marchal and Yves Robert},
  title = {{Centralized versus Distributed Schedulers for Bag-of-Tasks Applications}},
  journal = {IEEE Transactions on Parallel and Distributed Systems},
  year = {2008},
  volume = {19},
  pages = {698-709},
  number = {5},
  month = {May},
  abstract = {Multiple applications that execute concurrently on heterogeneous platforms
	compete for CPU and network resources. In this paper, we consider
	the problem of scheduling applications to ensure fair and efficient
	execution on a distributed network of processors. We limit our study
	to the case where communication is restricted to a tree embedded
	in the network, and the applications consist of a large number of
	independent tasks that originate at the tree's root. The tasks of
	a given application all have the same computation and communication
	requirements, but these requirements can vary for different applications.
	Each application is given a weight that quantifies its relative value.
	The goal of scheduling is to maximize throughput while executing
	tasks from each application in the same ratio as their weights. We
	can find the optimal asymptotic rates by solving a linear program
	that expresses all necessary problem constraints, and we show how
	to construct a periodic schedule. For single-level trees, the solution
	is characterized by processing tasks with larger communication-to-computation
	ratios at children with larger bandwidths. For multi-level trees,
	this approach requires global knowledge of all application and platform
	parameters. For large-scale platforms, such global coordination by
	a centralized scheduler may be unrealistic. Thus, we also investigate
	decentralized schedulers that use only local information at each
	participating resource. We assess their performance via simulation,
	and compare to a centralized solution obtained via linear programming.
	The best of our decentralized heuristics achieves the same performance
	on about two-thirds of our test cases, but is far worse in a few
	cases. While our results are based on simplistic assumptions and
	do not explore all parameters (such as buffer size), they provide
	insight into the important question of fairly and optimally co-scheduling
	heterogeneous applications on heterogeneous grids.},
  file = {Beaumont2008.pdf:Beaumont2008.pdf:PDF;Beaumont2008.pdf:Beaumont2008.pdf:PDF},
  keywords = {Bag-of-Tasks},
  owner = {mamurph},
  timestamp = {2009.02.06}
}

@CONFERENCE{B'egin2008,
  author = {B{\'e}gin, M.E.},
  title = {{An EGEE comparative study: Grids and Clouds-evolution or revolution}},
  booktitle = {23rd Open Grid Forum (OGF23)},
  year = {2008},
  __markedentry = {[lance]},
  owner = {sebgoa},
  timestamp = {2010.06.01}
}

@ELECTRONIC{Crockford,
  author = {Douglas Crockford},
  title = {{Introducing JSON}},
  howpublished = {\\\url{http://json.org}},
  owner = {Lance},
  timestamp = {2009.08.26}
}

@CONFERENCE{Deelman2004,
  author = {Deelman, E. and Blythe, J. and Gil, Y. and Kesselman, C. and Mehta,
	G. and Patil, S. and Su, M.H. and Vahi, K. and Livny, M.},
  title = {{Pegasus: Mapping scientific workflows onto the grid}},
  booktitle = {Grid Computing},
  year = {2004},
  pages = {131--140},
  organization = {Springer},
  __markedentry = {[lance]},
  owner = {sebgoa},
  timestamp = {2010.11.10}
}

@CONFERENCE{Deelman2009,
  author = {Deelman, E. and Singh, G. and Livny, M. and Berriman, B. and Good,
	J.},
  title = {{The cost of doing science on the cloud: the montage example}},
  booktitle = {High Performance Computing, Networking, Storage and Analysis, 2008.
	SC 2008. International Conference for},
  year = {2009},
  pages = {1--12},
  organization = {IEEE},
  owner = {sebgoa},
  timestamp = {2010.11.07}
}

@ARTICLE{DouglasThain2006,
  author = {Douglas Thain, Todd Tannenbaum, Miron Livny},
  title = {{How to Measure a Large Open Source Distributed System}},
  journal = {Concurrency and Computation: Practice and Experience},
  year = {2006},
  volume = {8},
  number = {15},
  month = {December},
  owner = {lstout},
  timestamp = {2009.09.01}
}

@INPROCEEDINGS{Figueiredo2003,
  author = {Renato J. Figueiredo and Peter A. Dinda and Jose A. B. Fortes},
  title = {A Case For Grid Computing On Virtual Machines},
  booktitle = {23rd International Conference on Distributed Computing Systems},
  year = {2003},
  __markedentry = {[lance]},
  abstract = {We advocate a novel approach to grid computing thatis based on a combination
	of "classic" operating system level virtual machines (VMs) and middleware
	mechanisms to manage VMs in a distributed environment. The abstractionis
	that of dynamically instantiated and mobile VMs thatare a combination
	of traditional OS processes (the VM monitors) and files (the VM state).
	We give qualitative arguments that justify our approach in terms
	of security, isolation, customization, legacy support and resource
	control,and we show quantitative results that demonstrate the feasibility
	of our approach from a performance perspective. Finally, we describe
	the middleware challenges implied by the approach and an architecture
	for grid computing using virtual machines.},
  file = {Figueiredo2003.pdf:Figueiredo2003.pdf:PDF},
  keywords = {Virtualization},
  owner = {mamurph},
  timestamp = {2007.08.21}
}

@ARTICLE{Foster1997,
  author = {Ian Foster and Carl Kesselman},
  title = {{Globus: A Metacomputing Infrastructure Toolkit}},
  journal = {International Journal of Supercomputing Applications},
  year = {1997},
  volume = {11},
  pages = {115--128},
  number = {2},
  abstract = {Emerging high-performance applications require the ability to exploit
	diverse, geographically distributed resources. These applications
	use high-speed networks to integrate supercomputers, large databases,
	archival storage devices, advanced visualization devices, and/or
	scientific instruments to form networked virtual supercomputers or
	metacomputers. While the physical infrastructure to build such systems
	is becoming widespread, the heterogeneous and dynamic nature of the
	metacomputing environment poses new challenges for developers of
	system software, parallel tools, and applications. In this article,
	we introduce Globus, a system that we are developing to address these
	challenges. The Globus system is intended to achieve a vertically
	integrated treatment of application, middleware, and network. A low-level
	toolkit provides basic mechanisms such as communication, authentication,
	network information, and data access. These mechanisms are used to
	construct various higher-level metacomputing services, such as parallel
	programming tools and schedulers. Our long-term goal is to build
	an Adaptive Wide Area Resource Environment (AWARE), an integrated
	set of higher-level services that enable applications to adapt to
	heterogeneous and dynamically changing metacomputing environments.
	Preliminary versions of Globus components were deployed successfully
	as part of the I-WAY networking experiment.},
  file = {Foster1997.pdf:Foster1997.pdf:PDF},
  keywords = {Middleware},
  owner = {mamurph},
  timestamp = {2008.11.19}
}

@CONFERENCE{Foster2009,
  author = {Foster, I. and Zhao, Y. and Raicu, I. and Lu, S.},
  title = {{Cloud computing and grid computing 360-degree compared}},
  booktitle = {Grid Computing Environments Workshop, 2008. GCE'08},
  year = {2009},
  pages = {1--10},
  organization = {Ieee},
  owner = {sebgoa},
  timestamp = {2010.11.07}
}

@ELECTRONIC{SleekXMPP,
  author = {Nathan Fritz and Lance Stout},
  title = {Sleek{XMPP}},
  howpublished = {\\\url{http://github.com/fritzy/SleekXMPP}},
  owner = {lstout},
  timestamp = {2009.09.02}
}

@INPROCEEDINGS{Ganguly2006,
  author = {Ganguly, A. and Agrawal, A. and Boykin, P. O. and Figueiredo, R.},
  title = {{IP} over {P2P}: Enabling self-configuring virtual {IP} networks
	for grid computing},
  booktitle = {20th International Parallel and Distributed Processing Symposium
	({IPDPS} 2006)},
  year = {2006},
  abstract = {Peer-to-peer (P2P) networks have mostly focused on task oriented networking,
	where networks are constructed for single applications, i.e. file-sharing,
	DNS caching, etc. In this work, we introduce IPOP, a system for creating
	virtual IP networks on top of a P2P overlay. IPOP enables seamless
	access to grid resources spanning multiple domains by aggregating
	them into a virtual IP network that is completely isolated from the
	physical network. The virtual IP network provided by IPOP supports
	deployment of existing IP-based protocols over a robust, self-configuring
	P2P overlay. We present implementation details as well as experimental
	measurement results taken from LAN, WAN, and Planet-Lab tests},
  doi = {10.1109/IPDPS.2006.1639287},
  file = {Ganguly2006.pdf:Ganguly2006.pdf:PDF},
  keywords = {Networking},
  owner = {mamurph},
  timestamp = {2009.03.04}
}

@INPROCEEDINGS{Ganguly2006a,
  author = {Ganguly, A. and Agrawal, A. and Boykin, P. O. and Figueiredo, R.
	},
  title = {{WOW}: Self-Organizing Wide Area Overlay Networks of Virtual Workstations},
  booktitle = {15th IEEE International Symposium on High Performance Distributed
	Computing},
  year = {2006},
  __markedentry = {[lance]},
  abstract = {This paper describes WOW, a distributed system that combines virtual
	machine, overlay networking and peer-to-peer techniques to create
	scalable wide-area networks of virtual workstations for high-throughput
	computing. The system is architected to: facilitate the addition
	of nodes to a pool of resources through the use of system virtual
	machines (VMs) and self-organizing virtual network links; to maintain
	IP connectivity even if VMs migrate across network domains; and to
	present to end-users and applications an environment that is functionally
	identical to a local-area network or cluster of workstations. We
	describe a novel, extensible user-level decentralized technique to
	discover, establish and maintain overlay links to tunnel IP packets
	over different transports (including UDP and TCP) and across firewalls.
	We also report on several experiments conducted on a testbed WOW
	deployment with 118 P2P router nodes over PlanetLab and 33 VMware-based
	VM nodes distributed across six firewalled domains. Experiments show
	that the latency in joining a WOW network is of the order of seconds:
	in a set of 300 trials, 90% of the nodes self-configured P2P routes
	within 10 seconds, and more than 99% established direct connections
	to other nodes within 200 seconds. Experiments also show that the
	testbed delivers good performance for two unmodified, representative
	benchmarks drawn from the life-sciences domain. The testbed WOW achieves
	an overall throughput of 53 jobs/minute for PBS-scheduled executions
	of the MEME application (with average single-job sequential running
	time of 24.1s) and a parallel speedup of 13.5 for the PVM-based fastDNAml
	application. Experiments also demonstrate that the system is capable
	of seamlessly maintaining connectivity at the virtual IP layer for
	typical client/server applications (NFS, SSH, PBS) when VMs migrate
	across a WAN},
  doi = {10.1109/HPDC.2006.1652133},
  file = {Ganguly2006a.pdf:Ganguly2006a.pdf:PDF},
  issn = {1082-8907},
  keywords = {Networking},
  owner = {mamurph},
  timestamp = {2009.03.04}
}

@ELECTRONIC{SQLite,
  author = {D. Richard Hipp},
  title = {{SQL}ite},
  howpublished = {\\\url{http://www.sqlite.org/}},
  organization = {Hwaci - Applied Software Research},
  owner = {lance},
  timestamp = {2011.02.21}
}

@CONFERENCE{Hoffa2009,
  author = {Hoffa, C. and Mehta, G. and Freeman, T. and Deelman, E. and Keahey,
	K. and Berriman, B. and Good, J.},
  title = {{On the use of cloud computing for scientific workflows}},
  booktitle = {eScience, 2008. eScience'08. IEEE Fourth International Conference
	on},
  year = {2009},
  pages = {640--645},
  organization = {IEEE},
  owner = {sebgoa},
  timestamp = {2010.11.07}
}

@ELECTRONIC{Hoof2006,
  author = {Jack van Hoof},
  month = {November},
  year = {2006},
  title = {How EDA extends SOA and why it is important},
  url = {http://soa-eda.blogspot.com/2006/11/how-eda-extends-soa-and-why-it-is.html},
  abstract = {Many people think of SOA as synchronous RPC (mostly over Web services).
	Others say EDA is SOA. And there are people
	
	who say that the best of EDA and SOA is combined in SOA 2.0. But an
	architectural distinction can be made between a request-
	
	and-reply pattern and a publish-and-subscribe pattern. Both patterns
	are an inverse of each other. Because of the completely
	
	different nature and use of the two patterns, it is necessary to be
	able to distinguish between the both and to name
	
	them. You might say making such a distinction is a universal architectural
	principle. Combining both of the patterns into an
	
	increment of the version number of one of them is not a very clever
	act. It is appropriate and desirable to use the acronyms
	
	SOA and EDA to make this distinction, because SOA and EDA are both
	positioned in the same architectural domain; SOA
	
	focusing on (the decomposition of) business functions and EDA focusing
	on business events. This article explains the differences
	
	between the two patterns, when to use the one or the other and how
	to combine them.},
  owner = {Lance},
  timestamp = {2009.08.25}
}

@INPROCEEDINGS{Hui2008,
  author = {Li Hui and Huashan Yu and Li Xiaoming},
  title = {{A lightweight execution framework for massive independent tasks}},
  booktitle = {Many-Task Computing on Grids and Supercomputers, 2008. MTAGS 2008.
	Workshop on},
  year = {2008},
  pages = {1-9},
  month = {Nov.},
  doi = {10.1109/MTAGS.2008.4777911},
  keywords = {biology computing, grid computing, resource allocationGracie system,
	bioinformatics task, computational grid software, distributed computational
	resources, heterogeneous computational nodes, lightweight execution
	framework, massive independent tasks, request submission, resource
	allocation, resource discovery, resource utilization},
  owner = {lstout},
  timestamp = {2009.08.31}
}

@ELECTRONIC{XEP-0001,
  author = {Peter Saint-Andre},
  title = {{XEP-0001: XMPP Extension Protocols}},
  howpublished = {\\\url{http://xmpp.org/extensions/xep-0001.html}},
  owner = {lstout},
  timestamp = {2010.09.13}
}

@ELECTRONIC{XEP-0030,
  author = {Joe Hildebrand, Peter Millard, Ryan Eatmon and Peter Saint-Andre},
  title = {{XEP-0030: Service Discovery}},
  howpublished = {\\\url{http://xmpp.org/extensions/xep-0030.html}},
  owner = {lstout},
  timestamp = {2010.09.13}
}

@ELECTRONIC{XEP-0079,
  author = {Matthew Millard and Peter Saint-Andre},
  title = {{XEP-0079: Advanced Message Processing}},
  howpublished = {\\\url{http://xmpp.org/extensions/xep-0079.html}},
  owner = {lstout},
  timestamp = {2010.09.13}
}


@ELECTRONIC{XEP-0027,
  author = {Thomas Muldowney},
  title = {{XEP-0027: Current Jabber OpenPGP Usage}},
  howpublished = {\\\url{http://xmpp.org/extensions/xep-0027.html}},
  owner = {lstout},
  timestamp = {2010.09.13}
}
@ELECTRONIC{XEP-0115,
  author = {Joe Hildebrand, Peter Saint-Andre, Remko Tron\con and Jacek Konieczny},
  title = {{XEP-0115: Entity Capabilities}},
  howpublished = {\\\url{http://xmpp.org/extensions/xep-0115.html}},
  owner = {lstout},
  timestamp = {2010.09.13}
}

@INPROCEEDINGS{Keahey2008,
  author = {Keahey, K. and Freeman, T.},
  title = {{Contextualization: Providing One-Click Virtual Clusters}},
  booktitle = {4th IEEE International Conference on e-Science},
  year = {2008},
  address = {Indianapolis, IN},
  month = {December},
  abstract = {As virtual appliances become more prevalent, we encounter the need
	to stop manually adapting them to their deployment context each time
	they are deployed. We examine appliance contextualization needs and
	present architecture for secure, consistent, and dynamic contextualization,
	in particular for groups of appliances that must work together in
	a shared security context. This architecture allows for programmatic
	cluster creation and use, as well as mitigating potential errors
	and unnecessary charges during setup time. For portability across
	many deployment mechanisms, we introduce the concept of a standalone
	context broker. We describe the current implementation of the entire
	architecture using the Virtual Workspaces toolkit, showing real-life
	examples of dynamically contextualized Grid clusters.},
  file = {Keahey2008.pdf:Keahey2008.pdf:PDF},
  keywords = {Workspaces},
  owner = {mike},
  timestamp = {2009.03.03}
}

@ELECTRONIC{RFC2778,
  author = {{M.}~Day, {J.}~Rosenburg and {H.}~Sugano},
  month = {February},
  year = {2000},
  title = {{A Model for Presence and Instant Messaging}},
  howpublished = {\\\url{http://www.ietf.org/rfc/rfc2778.txt}},
  abstract = {This document defines an abstract model for a presence and instant
	messaging system. It defines the various entities involved, defines
	terminology, and outlines the services provided by the system. The
	goal is to provide a common vocabulary for further work on requirements
	for protocols and markup for presence and instant messaging.},
  owner = {lance},
  publisher = {{IETF}},
  timestamp = {2011.01.23}
}

@ELECTRONIC{RFC2831,
  author = {{P.}~Leach and {C.}~Newman},
  month = {May},
  year = {2000},
  title = {{Using Digest Authentication as a SASL Mechanism}},
  howpublished = {\\\url{http://www.ietf.org/rfc/rfc3831.txt}},
  owner = {lance},
  publisher = {{IETF}},
  timestamp = {2011.01.23}
}

@ELECTRONIC{TLS,
  author = {{T.}~Dierks and {E.}~Rescorla},
  month = {August},
  year = {2008},
  title = {{The Transport Layer Security (TLS) Protocol Version 1.2}},
  howpublished = {\\\url{http://www.ietf.org/rfc/rfc5246.txt}},
  owner = {lance},
  publisher = {{IETF}},
  timestamp = {2011.01.23}
}

@ELECTRONIC{SASL,
  author = {{A.}~Melnikov and {K.}~Zeilenga},
  month = {June},
  year = {2006},
  title = {{Simple Authentication and Security Layer (SASL)}},
  howpublished = {\\\url{http://www.ietf.org/rfc/rfc4422.txt}},
  owner = {lance},
  publisher = {{IETF}},
  timestamp = {2011.01.23}
}

@ELECTRONIC{RFC2779,
  author = {{M.}~Day, {S.}~Aggarwal, {G.}~Mohr and {J.}~Vincent},
  month = {February},
  year = {2000},
  title = {{Instant Messaging / Presence Protocol Requirements}},
  howpublished = {\\\url{http://www.ietf.org/rfc/rfc2779.txt}},
  abstract = {Presence and Instant Messaging have recently emerged as a new medium
	of communications over the Internet. Presence is a means for finding,
	retrieving, and subscribing to changes in the presence information
	(e.g. "online" or "offline") of other users. Instant messaging is
	a means for sending small, simple messages that are delivered immediately
	to online users.
	
	 Applications of presence and instant messaging currently use independent,
	non-standard and non-interoperable protocols developed by various
	vendors. The goal of the Instant Messaging and Presence Protocol
	(IMPP) Working Group is to define a standard protocol so that independently
	developed applications of instant messaging and/or presence can interoperate
	across the Internet. This document defines a minimal set of requirements
	that IMPP must meet.},
  owner = {lance},
  publisher = {{IETF}},
  timestamp = {2011.01.23}
}

@CONFERENCE{Maeno2008,
  author = {Maeno, T.},
  title = {{PanDA: distributed production and distributed analysis system for
	ATLAS}},
  booktitle = {Journal of Physics: Conference Series},
  year = {2008},
  volume = {119},
  pages = {062036},
  organization = {IOP Publishing},
  owner = {sebgoa},
  timestamp = {2010.11.07}
}

@CONFERENCE{Maeno2008a,
  author = {Maeno, T.},
  title = {{PanDA: distributed production and distributed analysis system for
	ATLAS}},
  booktitle = {Journal of Physics: Conference Series},
  year = {2008},
  volume = {119},
  pages = {062036},
  organization = {IOP Publishing},
  owner = {sebgoa},
  timestamp = {2010.11.07}
}

@CONFERENCE{Marshall2010,
  author = {Marshall, P. and Keahey, K. and Freeman, T.},
  title = {{Elastic Site: Using Clouds to Elastically Extend Site Resources}},
  booktitle = {Proceedings of the 2010 10th IEEE/ACM International Conference on
	Cluster, Cloud and Grid Computing},
  year = {2010},
  pages = {43--52},
  organization = {IEEE Computer Society},
  owner = {sebgoa},
  timestamp = {2010.11.07}
}

@ELECTRONIC{Miller2005,
  author = {Matthew Miller},
  month = {June},
  year = {2005},
  title = {{XEP-0050: Ad-Hoc Commands}},
  organization = {{XMPP Standards Foundation}},
  howpublihsed = {\\\url{http://xmpp.org/extensions/xep-0050.html}},
  owner = {lstout},
  timestamp = {2009.09.01}
}

@ELECTRONIC{Moffitt2008,
  author = {Jack Moffitt},
  month = {August},
  year = {2008},
  title = {{Thoughts On Scalable XMPP Bots}},
  howpublished = {\\\url{http://metajack.im/2008/08/04/thoughts-on-scalable-xmpp-bots/}},
  owner = {Lance},
  timestamp = {2009.08.26}
}

@ELECTRONIC{Moffitt2008a,
  author = {Jack Moffitt},
  month = {June},
  year = {2008},
  title = {{Binary Data is XMPP's Achilles Heel}},
  howpublished = {\\\url{http://metajack.im/2008/06/10/binary-data-is-xmpps-achilles-heel}},
  owner = {Lance},
  timestamp = {2009.08.26}
}

@CONFERENCE{Moretti2008,
  author = {Moretti, C. and Bulosan, J. and Thain, D. and Flynn, P.J.},
  title = {{All-pairs: An abstraction for data-intensive cloud computing}},
  booktitle = {Parallel and Distributed Processing, 2008. IPDPS 2008. IEEE International
	Symposium on},
  year = {2008},
  pages = {1--11},
  organization = {IEEE},
  issn = {1530-2075},
  owner = {sebgoa},
  timestamp = {2010.11.07}
}

@ARTICLE{Murphy2010,
  author = {Michael A. Murphy and Linton Abraham and Michael Fenn and Sebastien
	Goasguen},
  title = {{Autonomic Clouds on the Grid}},
  journal = {Journal of Grid Computing},
  year = {2010},
  volume = {8},
  pages = {1--18},
  number = {1},
  month = {March},
  doi = {10.1007/s10723-009-9142-3},
  owner = {mamurph},
  timestamp = {2010.02.23}
}

@INPROCEEDINGS{Murphy2009,
  author = {Michael A. Murphy and Michael Fenn and Sebastien Goasguen},
  title = {Virtual {O}rganization {C}lusters},
  booktitle = {17th Euromicro International Conference on Parallel, Distributed,
	and Network-Based Processing (PDP 2009)},
  year = {2009},
  address = {Weimar, Germany},
  month = {February},
  abstract = {Sharing traditional clusters based on multiprogramming systems among
	different Virtual Organizations (VOs) can lead to complex situations
	resulting from the differing software requirements of each VO. This
	complexity could be eliminated if each cluster computing system supported
	only a single VO, thereby permitting the VO to customize the operating
	system and software selection available on its private cluster. While
	dedicating entire physical clusters on the Grid to single VOs is
	not practical in terms of cost and scale, an equivalent separation
	of VOs may be accomplished by deploying clusters of Virtual Machines
	(VMs) in a manner that gives each VO its own virtual cluster. Such
	Virtual Organization Clusters (VOCs) can have numerous benefits,
	including isolation of VOs from one another, independence of each
	VOC from the underlying hardware, allocation of physical resources
	on a per-VO basis, and clear separation of administrative responsibilities
	between the physical fabric provider and the VO itself.
	
	
	Initial results of implementing a complete system utilizing the proposed
	Virtual Organization Cluster Model confirm the administrative simplicity
	of isolating VO software from the physical system. End-user computational
	jobs submitted through the Grid are executed only on the virtual
	cluster supporting the respective VO, and each VO has substantial
	administrative flexibility in terms of software choice and system
	configuration. Performance tests using the Kernel-based Virtual Machine
	(KVM) hypervisor indicated a virtualization overhead of under 10%
	for latency-tolerant scientific applications, such as those that
	would be submitted to a standard or vanilla Condor universe. Latency-sensitive
	applications, such as MPI, experience substantial performance degradation
	with virtualization overheads on the order of 60%. These results
	suggest that VOCs are suitable for High-Throughput Computing (HTC)
	applications, where real-time network performance is not critical.
	VOCs might also be useful for High-Performance Computing (HPC) applications
	if virtual network performance can be sufficiently improved.},
  file = {Murphy2009.pdf:Murphy2009.pdf:PDF},
  keywords = {VOC},
  owner = {mamurph},
  timestamp = {2008.11.17}
}

@INPROCEEDINGS{Murphy2009a,
  author = {Michael A. Murphy and Brandon Kagey and Michael Fenn and Sebastien
	Goasguen},
  title = {{Dynamic Provisioning of Virtual Organization Clusters}},
  booktitle = {9th IEEE International Symposium on Cluster Computing and the Grid
	({CCGrid} '09)},
  year = {2009},
  address = {Shanghai, China},
  month = {May},
  abstract = {Virtual Organization Clusters are systems comprised of virtual machines
	that provide dedicated computing clusters for each individual Virtual
	Organization. The design of these clusters allows individual virtual
	machines to be independent of the underlying physical hardware, potentially
	allowing virtual clusters to span multiple grid sites. A major challenge
	in using Virtual Organization Clusters as a grid computing abstraction
	arises from the need to schedule and provision physical resources
	to run the virtual machines.
	
	
	This paper describes a virtual cluster scheduler implementation based
	on the Condor High Throughput Computing system. By means of real-time
	monitoring of the Condor job queue, virtual machines that belong
	to individual Virtual Organizations are provisioned and booted. Jobs
	belonging to each Virtual Organization are then run on the organization-specific
	virtual machines, which form a cluster dedicated to the specific
	organization. Once the queued jobs have executed, the virtual machines
	are terminated, thereby allowing the physical resources to be re-claimed.
	Tests of this system were conducted using synthetic workloads, demonstrating
	that dynamic provisioning of virtual machines preserves system throughput
	for all but the shortest-running of grid jobs, without undue increase
	in scheduling latency.},
  file = {Murphy2009a.pdf:Murphy2009a.pdf:PDF},
  keywords = {VOC},
  owner = {mamurph},
  timestamp = {2009.02.13}
}

@ARTICLE{Nitzberg2004,
  author = {Nitzberg, Bill and Schopf, Jennifer M. and Jones, James Patton},
  title = {PBS Pro: Grid computing and scheduling attributes},
  year = {2004},
  pages = {183--190},
  address = {Norwell, MA, USA},
  book = {Grid resource management: state of the art and future trends},
  isbn = {1-4020-7575-8},
  owner = {lance},
  publisher = {Kluwer Academic Publishers},
  timestamp = {2011.02.21}
}

@ARTICLE{PBS,
  author = {Nitzberg, Bill and Schopf, Jennifer M. and Jones, James Patton},
  title = {{PBS Pro: Grid computing and scheduling attributes}},
  year = {2004},
  pages = {183--190},
  address = {Norwell, MA, USA},
  book = {Grid resource management: state of the art and future trends},
  isbn = {1-4020-7575-8},
  publisher = {Kluwer Academic Publishers}
}

@CONFERENCE{Nurmi2009,
  author = {Nurmi, D. and Wolski, R. and Grzegorczyk, C. and Obertelli, G. and
	Soman, S. and Youseff, L. and Zagorodnov, D.},
  title = {{The eucalyptus open-source cloud-computing system}},
  booktitle = {Proceedings of the 2009 9th IEEE/ACM International Symposium on Cluster
	Computing and the Grid-Volume 00},
  year = {2009},
  pages = {124--131},
  organization = {IEEE Computer Society},
  __markedentry = {[lance]},
  owner = {sebgoa},
  timestamp = {2010.07.05}
}

@ARTICLE{Oinn2004,
  author = {Oinn, T. and Addis, M. and Ferris, J. and Marvin, D. and Greenwood,
	M. and Carver, T. and Pocock, M.R. and Wipat, A. and Li, P.},
  title = {{Taverna: a tool for the composition and enactment of bioinformatics
	workflows}},
  journal = {Bioinformatics},
  year = {2004},
  issn = {1367-4803},
  owner = {sebgoa},
  publisher = {Oxford Univ Press},
  timestamp = {2010.11.07}
}

@INPROCEEDINGS{PWang2003,
  author = {P Wang, S Sparks, C Zou},
  title = {{An Advanced Hybrid Peer-to-Peer Botnet}},
  booktitle = {Dependable and Secure Computing, IEEE Transactions on : Accepted
	for future publication},
  year = {2003},
  volume = {PP},
  owner = {lstout},
  timestamp = {2009.09.02}
}

@INPROCEEDINGS{Raicu2008,
  author = {Raicu, I. and Foster, I.T. and Yong Zhao},
  title = {{Many-task computing for grids and supercomputers}},
  booktitle = {Many-Task Computing on Grids and Supercomputers, 2008. MTAGS 2008.
	Workshop on},
  year = {2008},
  pages = {1-11},
  month = {Nov.},
  doi = {10.1109/MTAGS.2008.4777912},
  keywords = {file organisation, grid computing, message passing, parallel machinesfile
	system operations, grid computing, high performance computing, high
	throughput computing, many task computing, message passing interface,
	supercomputers}
}

@CONFERENCE{Raicu2007,
  author = {Raicu, I. and Zhao, Y. and Dumitrescu, C. and Foster, I. and Wilde,
	M.},
  title = {{Falkon: a Fast and Light-weight tasK executiON framework}},
  booktitle = {Supercomputing, 2007. SC'07. Proceedings of the 2007 ACM/IEEE Conference
	on},
  year = {2007},
  pages = {1--12},
  organization = {IEEE},
  __markedentry = {[sebgoa][lance]},
  owner = {sebgoa},
  timestamp = {2010.11.10}
}

@ARTICLE{Ruth2005,
  author = {Paul Ruth and Xuxian Jiang and Dongyan Xu and Sebastien Goasguen},
  title = {{Virtual Distributed Environments in a Shared Infrastructure}},
  journal = {Computer},
  year = {2005},
  volume = {38},
  pages = {63-69},
  number = {5},
  abstract = {We have developed a middleware system that integrates and extends
	virtual machine and virtual network technologies to support mutually
	isolated virtual distributed environments in shared infrastructures
	like the grid and the PlanetLab overlay infrastructure. Integrating
	virtual network and on-demand virtual machine creation and customization
	technologies makes virtual distributed environments a reality. The
	Violin-based middleware system integrates and enhances such technologies
	to create virtual distributed environments.},
  file = {Ruth2005.pdf:Ruth2005.pdf:PDF},
  keywords = {Networking},
  owner = {mamurph},
  timestamp = {2008.03.25}
}

@ELECTRONIC{XEP-0134,
  author = {Peter Saint-Andre},
  title = {{XEP-0134: XMPP Design Guidelines}},
  howpublished = {\\\url{http://xmpp.org/extensions/xep-0134.html}},
  owner = {lstout},
  timestamp = {2010.09.13}
}

@ELECTRONIC{RFC3920,
  author = {P. Saint-Andre},
  month = {October},
  year = {2004},
  title = {{Extensible Messaging and Presence Protocol (XMPP): Core}},
  howpublished = {\\\url{http://www.ietf.org/rfc/rfc3920.txt}},
  organization = {IETF},
  abstract = {This memo defines the core features of the Extensible Messaging and
	
	 Presence Protocol (XMPP), a protocol for streaming Extensible Markup
	
	 Language (XML) elements in order to exchange structured information
	
	 in close to real time between any two network endpoints. While XMPP
	
	 provides a generalized, extensible framework for exchanging XML data,
	
	 it is used mainly for the purpose of building instant messaging and
	
	 presence applications that meet the requirements of RFC 2779.},
  owner = {lstout},
  timestamp = {2009.09.01}
}

@ELECTRONIC{RFC3921,
  author = {P. Saint-Andre},
  month = {October},
  year = {2004},
  title = {{Extensible Messaging and Presence Protocol (XMPP): Instant Messaging
	and Presence}},
  howpublished = {\\\url{http://www.ietf.org/rfc/rfc3921.txt}},
  organization = {IETF},
  abstract = {This memo describes extensions to and applications of the core
	
	 features of the Extensible Messaging and Presence Protocol (XMPP)
	
	 that provide the basic instant messaging (IM) and presence
	
	 functionality defined in RFC 2779.},
  owner = {lstout},
  timestamp = {2009.09.01}
}

@ELECTRONIC{Redis,
  author = {Salvatore Sanfilippo},
  title = {Redis},
  howpublished = {\\\url{http://redis.io}},
  owner = {lance},
  timestamp = {2011.02.21}
}

@CONFERENCE{Schmidt2010,
  author = {Schmidt, M. and Fallenbeck, N. and Smith, M. and Freisleben, B.},
  title = {{Efficient Distribution of Virtual Machines for Cloud Computing}},
  booktitle = {2010 18th Euromicro Conference on Parallel, Distributed and Network-based
	Processing},
  year = {2010},
  pages = {567--574},
  organization = {IEEE},
  __markedentry = {[lance]},
  owner = {sebgoa},
  timestamp = {2010.09.03}
}

@INPROCEEDINGS{Schwickerath2010,
  author = {Ulrich Schwickerath and Sebastien Goasguen},
  title = {CERN Cloud Computing Infrastructure},
  booktitle = {2nd Cloud Computing International Conference},
  year = {2010},
  __markedentry = {[lance]},
  owner = {sebgoa},
  timestamp = {2010.09.05}
}

@CONFERENCE{Sfiligoi2008,
  author = {Sfiligoi, I.},
  title = {{glideinWMS - a generic pilot-based workload management system}},
  booktitle = {Journal of Physics: Conference Series},
  year = {2008},
  volume = {119},
  pages = {062044},
  organization = {IOP Publishing},
  owner = {sebgoa},
  timestamp = {2010.11.07}
}

@ELECTRONIC{MicroCoreLinux,
  author = {Robert Shingledecker},
  title = {{Micro Core Linux}},
  howpublished = {\\\url{http://www.tinycorelinux.com/}},
  owner = {lance},
  timestamp = {2011.02.21}
}

@ARTICLE{Sotomayor2009,
  author = {Sotomayor, B. and Montero, R.S. and Llorente, I.M. and Foster, I.},
  title = {{Virtual infrastructure management in private and hybrid clouds}},
  journal = {IEEE Internet Computing},
  year = {2009},
  volume = {13},
  pages = {14--22},
  number = {5},
  __markedentry = {[lance]},
  owner = {sebgoa},
  publisher = {IEEE Educational Activities Department},
  timestamp = {2010.06.01}
}

@INPROCEEDINGS{Stout10,
  author = {Stout, Lance and Fenn, Michael and Murphy, Michael A. and Goasguen,
	Sebastien},
  title = {{Scaling virtual organization clusters over a wide area network using
	the Kestrel workload management system}},
  booktitle = {Proceedings of the 19th ACM International Symposium on High Performance
	Distributed Computing},
  year = {2010},
  series = {HPDC '10},
  pages = {692--698},
  address = {New York, NY, USA},
  publisher = {ACM},
  acmid = {1851578},
  doi = {http://doi.acm.org/10.1145/1851476.1851578},
  isbn = {978-1-60558-942-8},
  keywords = {MTC, VOC, XMPP, cluster, distributed, grid, scheduling},
  location = {Chicago, Illinois},
  numpages = {7},
  url = {http://doi.acm.org/10.1145/1851476.1851578}
}

@INPROCEEDINGS{Stout2009,
  author = {Stout, Lance and Murphy, Michael A. and Goasguen, Sebastien},
  title = {{Kestrel: an XMPP-based framework for many task computing applications}},
  booktitle = {MTAGS '09: Proceedings of the 2nd Workshop on Many-Task Computing
	on Grids and Supercomputers},
  year = {2009},
  pages = {1--6},
  address = {New York, NY, USA},
  publisher = {ACM},
  __markedentry = {[lstout]},
  doi = {http://doi.acm.org/10.1145/1646468.1646479},
  isbn = {978-1-60558-714-1},
  location = {Portland, Oregon},
  owner = {lstout},
  timestamp = {2010.03.01}
}

@INPROCEEDINGS{Tannenbaum2001,
  author = {Todd Tannenbaum and Derek Wright and Karen Miller and Miron Livny},
  title = {{C}ondor -- A Distributed Job Scheduler},
  booktitle = {Beowulf Cluster Computing with {L}inux},
  year = {2001},
  editor = {Thomas Sterling},
  month = {October},
  publisher = {MIT Press},
  file = {Tannenbaum2001.pdf:Tannenbaum2001.pdf:PDF},
  keywords = {Middleware},
  owner = {mamurph},
  timestamp = {2008.11.18}
}

@INPROCEEDINGS{Tsaregorodtsev2004,
  author = {Andrei Tsaregorodtsev and Vincent Garonne and Ian Stokes-Rees},
  title = {{DIRAC: A Scalable Lightweight Architecture for High Throughput Computing}},
  booktitle = {Fifth IEEE/ACM International Workshop on Grid Computing (GRID '04)},
  year = {2004},
  address = {Pittsburgh, PA},
  month = {November},
  __markedentry = {[lance]},
  abstract = {DIRAC (Distributed Infrastructure with Remote Agent Control) has been
	developed by the CERN LHCb physics experiment to facilitate large
	scale simulation and user analysis tasks spread across both grid
	and non-grid computing resources. It consists of a small set of distributed
	stateless Core Services, which are centrally managed, and Agents
	which are managed by each computing site. DIRAC utilizes concepts
	from existing distributed computing models to provide a lightweight,
	robust, and flexible system. This paper will discuss the architecture,
	performance, and implementation of the DIRAC system which has recently
	been used for an intensive physics simulation involving more than
	forty sites, 90 TB of data, and in excess of one thousand 1 GHz processor-years.},
  file = {Tsaregorodtsev2004.pdf:Tsaregorodtsev2004.pdf:PDF},
  keywords = {Pilot},
  owner = {mike},
  timestamp = {2009.10.12}
}

@INPROCEEDINGS{Tsugawa2006,
  author = {Tsugawa, M. and Fortes, J. A. B.},
  title = {A virtual network ({ViNe}) architecture for grid computing},
  booktitle = {20th International Parallel and Distributed Processing Symposium
	({IPDPS} 2006)},
  year = {2006},
  abstract = {This paper describes a virtual networking approach for grids called
	ViNe. It enables symmetric connectivity among grid resources and
	allows existing applications to run unmodified. Novel features of
	the ViNe architecture include: easy virtual networking administration;
	support for physical private networks and support for multiple independent
	virtual networks in the same infrastructure. The requirements of
	an application-friendly virtual network environment are presented
	and it is shown how the proposed solution meets them. Qualitative
	arguments are provided to justify all design decisions. Also presented
	is an experimental evaluation of the round-trip latencies and bandwidths
	achieved by a reference implementation. Measurements are reported
	for WAN-scenarios involving three different institutions. Under favorable
	conditions, ViNe bandwidths are within 90 to 100% of the available
	physical network bandwidth},
  doi = {10.1109/IPDPS.2006.1639380},
  file = {Tsugawa2006.pdf:Tsugawa2006.pdf:PDF},
  keywords = {In-VIGO},
  owner = {mamurph},
  timestamp = {2009.03.04}
}

@ARTICLE{Vaquero2008,
  author = {Vaquero, L.M. and Rodero-Merino, L. and Caceres, J. and Lindner,
	M.},
  title = {{A break in the clouds: towards a cloud definition}},
  journal = {ACM SIGCOMM Computer Communication Review},
  year = {2008},
  volume = {39},
  pages = {50--55},
  number = {1},
  __markedentry = {[lance]},
  owner = {sebgoa},
  publisher = {ACM},
  timestamp = {2010.06.01}
}

@ARTICLE{Wagener2009,
  author = {Wagener, J. and Spjuth, O. and Willighagen, E.L. and Wikberg, J.E.S.},
  title = {{XMPP for cloud computing in bioinformatics supporting discovery
	and invocation of asynchronous web services}},
  journal = {BMC bioinformatics},
  year = {2009},
  volume = {10},
  pages = {279},
  number = {1},
  __markedentry = {[sebgoa]},
  issn = {1471-2105},
  owner = {sebgoa},
  publisher = {BioMed Central Ltd},
  timestamp = {2010.11.07}
}

@INPROCEEDINGS{Weis2009,
  author = {Weis, G. and Lewis, A.},
  title = {{Using XMPP for ad-hoc grid computing - an application example using
	parallel ant colony optimisation}},
  booktitle = {Parallel \& Distributed Processing, 2009. IPDPS 2009. IEEE International
	Symposium on},
  year = {2009},
  pages = {1-4},
  month = {May},
  doi = {10.1109/IPDPS.2009.5161115},
  issn = {1530-2075},
  keywords = {XML, ad hoc networks, antennas, electronic messaging, grid computing,
	optimisation, protocols, radiofrequency identificationJabber, NEC-tool,
	RFID antennas, XML messaging and presence protocol, XML streams,
	XMPP, ad-hoc grid computing, computing resources, instant messaging
	protocol, parallel ant colony optimisation}
}

@ARTICLE{Wilde2009,
  author = {Wilde, M. and Foster, I. and Iskra, K. and Beckman, P. and Zhang,
	Z. and Espinosa, A. and Hategan, M. and Clifford, B. and Raicu, I.},
  title = {{Parallel socripting for applications at the petascale and beyond}},
  journal = {Computer},
  year = {2009},
  volume = {42},
  pages = {50--60},
  number = {11},
  issn = {0018-9162},
  owner = {sebgoa},
  publisher = {IEEE},
  timestamp = {2010.11.07}
}

@INPROCEEDINGS{Wolinsky2006,
  author = {David Wolinsky and Abhishek Agrawal and P. Oscar Boykin and Justin
	Davis and Arijit Ganguly and Vladimir Paramygin and Peter Sheng and
	Renato Figueiredo},
  title = {On the Design of Virtual Machine Sandboxes for Distributed Computing
	in {W}ide-area {O}verlays of Virtual {W}orkstations},
  booktitle = {First International Workshop on Virtualization Technology in Distributed
	Computing},
  year = {2006},
  __markedentry = {[lance]},
  abstract = {With recent advances in virtual computing and the revelation that
	compute-intensive tasks run well on system virtual machines (VMs),
	the ability to develop, deploy, and manage distributed systems has
	been ameliorated. This paper explores the design space of VM-based
	sandboxes where the following techniques that facilitate the deployment
	of secure nodes in Wide-area Overlays of virtual Workstations (WOWs)
	are employed: DHCP-based virtual IP address allocation, self-configuring
	virtual networks supporting peer-to-peer NAT traversal, stacked file
	systems, and IPsec-based host authentication and end-to-end encryption
	of communication channels. Experiments with implementations of single-image
	VM sandboxes, which incorporate the above features and are easily
	deployable on hosted I/O VMMs, show execution time overheads of 10.6%
	or less for a batch-oriented CPU-intensive benchmark.},
  file = {Wolinsky2006.pdf:Wolinsky2006.pdf:PDF},
  keywords = {Networking},
  owner = {mamurph},
  timestamp = {2007.09.12}
}

@ELECTRONIC{DoDXMPP,
  author = {Rutrell Yasin},
  month = {June},
  year = {2010},
  title = {{DOD wants instant messaging tools to speak the same language}},
  howpublished = {\\\url{http://defensesystems.com/articles/2010/06/23/dod-instant-messaging-test.aspx}},
  organization = {Defense Systems},
  owner = {lance},
  timestamp = {2010.11.10}
}

@ELECTRONIC{Adium,
  title = {Adium},
  howpublished = {\\\url{http://www.adium.im}},
  owner = {lstout},
  timestamp = {2009.09.01}
}

@ELECTRONIC{AIM,
  title = {{AOL Instant Messenger}},
  howpublished = {\\\url{http://www.aim.com}},
  organization = {America On-Line},
  owner = {lance},
  publisher = {America On-Line},
  timestamp = {2011.01.23}
}

@ELECTRONIC{ejabberd,
  title = {Ejabberd},
  howpublished = {\\\url{http://www.process-one.net/en/ejabberd/}},
  organization = {Process One},
  owner = {lstout},
  timestamp = {2009.09.02}
}

@ELECTRONIC{GTalk,
  title = {{Google Talk}},
  howpublished = {\\\url{http://www.google.com/talk}},
  owner = {lstout},
  timestamp = {2009.09.01}
}

@ELECTRONIC{JabberRu,
  title = {{Jabber.Ru | The biggest Russian-node instant messaging network.}},
  howpublished = {{\\\url{http://www.jabber.ru}}},
  owner = {lance},
  timestamp = {2011.02.21}
}

@ELECTRONIC{MSN,
  title = {{Windows Live Messenger}},
  howpublished = {\\\url{http://explore.live.com/windows-live-messenger}},
  organization = {Microsoft},
  owner = {lance},
  timestamp = {2011.01.23}
}

@ELECTRONIC{Openfire,
  title = {{Ignite Realtime: Openfire Server}},
  howpublished = {\\\url{http://www.igniterealtime.org/projects/openfire/}},
  organization = {Jive Software},
  owner = {lstout},
  timestamp = {2010.03.01}
}

@ELECTRONIC{Pidgin,
  title = {{Pidgin, the universal chat client}},
  howpublished = {\\\url{http://www.pidgin.im}},
  owner = {lstout},
  timestamp = {2009.09.01}
}

@ELECTRONIC{Python,
  title = {{Python Programming Language}},
  howpublished = {\\\url{http://www.python.org}},
  organization = {Python Software Foundation},
  owner = {lstout},
  timestamp = {2009.09.02}
}

@ELECTRONIC{STAR,
  title = {The {STAR} experiment},
  howpublished = {\\\url{http://www.star.bnl.gov/}},
  owner = {lstout},
  timestamp = {2010.09.13}
}

@ELECTRONIC{Tigase,
  title = {{tigase.org | Open Source and Free (GPLv3) Jabber/XMPP Server}},
  howpublished = {\\\url{http://www.tigase.org/}},
  owner = {lstout},
  timestamp = {2010.03.01}
}

@ELECTRONIC{XSF,
  title = {{XMPP Standards Foundation}},
  howpublished = {\\\url{http://xmpp.org}},
  owner = {lstout},
  timestamp = {2010.09.13}
}

@ELECTRONIC{XSF-History,
  title = {{History - The XMPP Standards Foundation}},
  howpublished = {\\\url{http://xmpp.org/about-xmpp/history}},
  owner = {lstout},
  timestamp = {2010.09.13}
}

@ELECTRONIC{XSF-Services,
  title = {{Public XMPP Services}},
  howpublished = {\\\url{http://xmpp.org/services}},
  year = {2009},
  month = {December},
  owner = {lstout},
  timestamp = {2010.09.13}
}


@ELECTRONIC{Flocking,
  month = {August},
  year = {2009},
  title = {{5.2 Connecting Condor Pools with Flocking}},
  howpublished = {\\\url{http://www.cs.wisc.edu/condor/manual/v7.3/5\_2Connecting\_Condor.html}},
  organization = {University of Wisconsin-Madison},
  owner = {lstout},
  timestamp = {2009.09.01}
}

@ELECTRONIC{XMPP-E2E,
    author = {{D}.~Meyer and {P}.~Saint-Andre},
    title = {{XTLS: End-to-End Encryption for the Extensible Messaging and Presence Protocol
        (XMPP) Using Transport Layer Security (TLS)}},
    month = {June},
    year = {2009},
    orangization = {IETF},
    howpublished = {\\\url{http://tools.ietf.org/html/draft-meyer-xmpp-e2e-encryption-02}}
}

@ELECTRONIC{SQLAlchemy,
    title = {{SQLAlchemy - The Database Toolkit for Python}},
    howpublished = {\\\url{http://www.sqlalchemy.org}}
}

@ELECTRONIC{EC2,
    title = {{Amazon Elastic Compute Cloud (Amazon EC2)}},
    howpublished = {\\\url{http://aws.amazon.com/ec2}},
    organization = {Amazon}
}

@ELECTRONIC{Yahoo,
    title = {{Yahoo! Messenger - Chat, Instant message, SMS, Video Call, PC Calls}},
    howpublished = {\\\url{http://messenger.yahoo.com}},
    organization = {Yahoo!}
}

@ELECTRONIC{Facebook,
    title = {{Facebook Chat}},
    howpublished = {\\\url{http://www.facebook.com/sitetour/chat.php}},
    organization = {Facebook}
}

@ELECTRONIC{GCB,
    title = {{GCB: Generic Connection Brokering}},
    howpublished = {\\\url{http://www.cs.wisc.edu/condor/gcb}},
}

@ELECTRONIC{GCB2,
    title = {{Condor Version 7.0.5 Manual}},
    howpublished = {\\\url{http://www.cs.wisc.edu/condor/manual/v7.0/3_7Networking_includes.html#SECTION00473000000000000000}},
}

